TREEROOT	= ../..

include		$(TREEROOT)/config.local

PRECOMMITHOOK = precommitStatisticsHook-$(OSTYPE).sh 

COMMONPATH	= ../common
NOISYPATH	= ../noisy
INCLUDEPATH	= ../include
EXAMPLESPATH	= ../../applications/newton

COMPILERVARIANT = gcc	#clang

LLVM_CONFIG?=llvm-config

SYSNAME		= Newton
SYSNAMELOWER	= newton
include		$(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT)
include		$(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT)

PLATFORM_CFLAGS	+= -Wno-gnu-designator
MAKEFLAGS	+= #-j
EXAMPLES_NEWTON_FLAGS = -v 2 -p#--verbose 1

CXXFLAGS	= $(PLATFORM_DBGFLAGS) $(PLATFORM_CFLAGS) $(PLATFORM_DFLAGS) $(PLATFORM_OPTFLAGS)
CCFLAGS		= $(PLATFORM_DBGFLAGS) $(PLATFORM_CFLAGS) $(PLATFORM_DFLAGS) $(PLATFORM_OPTFLAGS)
LDFLAGS 	= $(PLATFORM_DBGFLAGS) -lm $(PLATFORM_LFLAGS) `pkg-config --libs 'libprotobuf-c >= 1.0.0'`

LDFLAGS+=$(shell $(LLVM_CONFIG) --ldflags)
CXXFLAGS+=$(COMMON_FLAGS) $(shell $(LLVM_CONFIG) --cxxflags) -fno-rtti
CPPFLAGS+=$(shell $(LLVM_CONFIG) --cppflags) -I$(shell $(LLVM_CONFIG) --includedir)
LLVMLIBS=$(shell $(LLVM_CONFIG) --libs irreader support)
SYSTEMLIBS=$(shell $(LLVM_CONFIG) --system-libs)


LIBNEWTON	= Newton
LIBCOMMON	= Common

NEWTON_L10N	= EN
COMMON_L10N	= EN

TARGET		= newton-$(OSTYPE)-$(NEWTON_L10N)
CGI_TARGET	= newtoncgi-$(OSTYPE)-$(NEWTON_L10N)

#	-std=gnu99 because we use anonymous unions and induction variable defintions in loop head.
CCFLAGS		+= -c -std=gnu99 -DkNewtonL10N="\"$(NEWTON_L10N)\"" -DNEWTON_L10N_EN
CXXFLAGS	+= -c -std=c++14 -DkNewtonL10N="\"$(NEWTON_L10N)\"" -DNEWTON_L10N_EN

WFLAGS		= -Wall #-Werror
INCDIRS		= -I. -I$(LIBFLEXPATH) -I$(COMMONPATH) -I$(NOISYPATH) -I$(INCLUDEPATH) -I$(TREEROOT)/submodules/eigen
LINKDIRS	= -L. -L$(LIBFLEXPATH) -L$(COMMONPATH) -lCommon-$(OSTYPE)-EN
PROTOC		= protoc-c

NEWTONEXTENSION	= nt

SOURCES		=\
		newton-productions.c\
		newton-tokens.c\
		newton-lexer.c\
		newton-dimension-prescan.c\
		newton-parser.c\
		newton-dimension-pass.c\
		newton-dimension-check-pass.c\
		newton-irPass-autoDiff.c\
		newton-irPass-sensors.c\
		newton-irPass-dotBackend.c\
		newton-irPass-smtBackend.c\
		newton-irPass-cBackend.c\
		newton-irPass-targetParamBackend.c\
		newton-irPass-RTLBackend.c\
		newton-irPass-signalTypedefGenerationBackend.c\
		newton-irPass-estimatorSynthesisBackend.c\
		newton-irPass-invariantSignalAnnotation.c\
		newton-irPass-piGroupsSignalAnnotation.c\
		newton-irPass-ipsaBackend.c\
		newton-irPass-dimensionalMatrixAnnotation.c\
		newton-irPass-dimensionalMatrixPiGroups.c\
		newton-irPass-dimensionalMatrixPrinter.c\
		newton-irPass-dimensionalMatrixKernelPrinter.c\
		newton-irPass-dimensionalMatrixConvertToList.c\
		newton-irPass-dimensionalMatrixPiGroupWeedOut.c\
		newton-irPass-dimensionalMatrixPiGroupSorted.c\
		newton-irPass-dimensionalMatrixKernelRowCanonicalization.c\
		newton-irPass-constantFolding.c\
		newton-typeSignatures.c\
		newton-check-pass.c  \
		newton-symbolTable.c\
		newton-ffi2code-autoGeneratedSets.c\
		newton.c\
		newton-types.c\
		newton-timeStamps.c\
		main.c\
		newton-eigenLibraryInterface.cpp\
		newton-irPass-LLVMIR-dimension-check.cpp\
		newton-irPass-LLVMIR-livenessAnalysis.cpp\
		newton-irPass-LLVMIR-optimizeByRange.cpp\
		newton-irPass-LLVMIR-rangeAnalysis.cpp\
		newton-irPass-LLVMIR-simplifyControlFlowByRange.cpp\
		newton-irPass-LLVMIR-constantSubstitution.cpp\
		newton-irPass-LLVMIR-shrinkTypeByRange.cpp\
		newton-irPass-LLVMIR-quantization.cpp\
		newton-irPass-LLVMIR-memoryAlignment.cpp\
		newton-irPass-LLVMIR-emitAssume.cpp\


#
#	Clang seems to be unable to do LTO unless we have all the objects
#	not tucked into a library, so we don't just simply link main against
#	-l$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N)
#
OBJS		=\
		main.$(OBJECTEXTENSION)\
		newton.$(OBJECTEXTENSION)\
		version.$(OBJECTEXTENSION)\
		newton-productions.$(OBJECTEXTENSION)\
		newton-tokens.$(OBJECTEXTENSION)\
		newton-lexer.$(OBJECTEXTENSION)\
		newton-dimension-prescan.$(OBJECTEXTENSION)\
		newton-parser.$(OBJECTEXTENSION)\
		newton-types.$(OBJECTEXTENSION)\
		newton-timeStamps.$(OBJECTEXTENSION)\
		newton-typeSignatures.$(OBJECTEXTENSION)\
		newton-irPass-autoDiff.$(OBJECTEXTENSION)\
		newton-irPass-sensors.$(OBJECTEXTENSION)\
		newton-irPass-cBackend.$(OBJECTEXTENSION)\
		newton-irPass-RTLBackend.$(OBJECTEXTENSION)\
		newton-irPass-signalTypedefGenerationBackend.$(OBJECTEXTENSION)\
		newton-irPass-dotBackend.$(OBJECTEXTENSION)\
		newton-irPass-smtBackend.$(OBJECTEXTENSION)\
		newton-irPass-estimatorSynthesisBackend.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-dimension-check.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-livenessAnalysis.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-optimizeByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-rangeAnalysis.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-simplifyControlFlowByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-constantSubstitution.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-shrinkTypeByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-quantization.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-emitAssume.$(OBJECTEXTENSION)\
		newton-irPass-invariantSignalAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-piGroupsSignalAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-ipsaBackend.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroups.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPrinter.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixKernelPrinter.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixConvertToList.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroupWeedOut.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroupSorted.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixKernelRowCanonicalization.$(OBJECTEXTENSION)\
		newton-irPass-constantFolding.$(OBJECTEXTENSION)\
		newton-check-pass.$(OBJECTEXTENSION)  \
		newton-symbolTable.$(OBJECTEXTENSION)\
		newton-ffi2code-autoGeneratedSets.$(OBJECTEXTENSION)\
		newton-eigenLibraryInterface.$(OBJECTEXTENSION)\
		newton-irPass-targetParamBackend.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-memoryAlignment.$(OBJECTEXTENSION)\


CGIOBJS		=\
		cgimain.$(OBJECTEXTENSION)\
		newton.$(OBJECTEXTENSION)\
		version.$(OBJECTEXTENSION)\
		newton-productions.$(OBJECTEXTENSION)\
		newton-tokens.$(OBJECTEXTENSION)\
		newton-lexer.$(OBJECTEXTENSION)\
		newton-dimension-prescan.$(OBJECTEXTENSION)\
		newton-parser.$(OBJECTEXTENSION)\
		newton-types.$(OBJECTEXTENSION)\
		newton-timeStamps.$(OBJECTEXTENSION)\
		newton-typeSignatures.$(OBJECTEXTENSION)\
		newton-irPass-autoDiff.$(OBJECTEXTENSION)\
		newton-irPass-sensors.$(OBJECTEXTENSION)\
		newton-irPass-cBackend.$(OBJECTEXTENSION)\
		newton-irPass-RTLBackend.$(OBJECTEXTENSION)\
		newton-irPass-signalTypedefGenerationBackend.$(OBJECTEXTENSION)\
		newton-irPass-dotBackend.$(OBJECTEXTENSION)\
		newton-irPass-smtBackend.$(OBJECTEXTENSION)\
		newton-irPass-estimatorSynthesisBackend.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-dimension-check.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-livenessAnalysis.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-optimizeByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-rangeAnalysis.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-simplifyControlFlowByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-constantSubstitution.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-shrinkTypeByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-quantization.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-emitAssume.$(OBJECTEXTENSION)\
		newton-irPass-invariantSignalAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-piGroupsSignalAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-estimatorSynthesisBackend/$(OBJECTEXTENSION)\
		newton-irPass-ipsaBackend.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroups.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPrinter.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixKernelPrinter.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixConvertToList.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroupWeedOut.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroupSorted.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixKernelRowCanonicalization.$(OBJECTEXTENSION)\
		newton-irPass-constantFolding.$(OBJECTEXTENSION)\
		newton-check-pass.$(OBJECTEXTENSION)\
		newton-symbolTable.$(OBJECTEXTENSION)\
		newton-ffi2code-autoGeneratedSets.$(OBJECTEXTENSION)\
		newton-eigenLibraryInterface.$(OBJECTEXTENSION)\
		newton-irPass-targetParamBackend.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-memoryAlignment.$(OBJECTEXTENSION)\


LIBNEWTONOBJS =\
		version.$(OBJECTEXTENSION)\
		newton.$(OBJECTEXTENSION)\
		newton-productions.$(OBJECTEXTENSION)\
		newton-tokens.$(OBJECTEXTENSION)\
		newton-lexer.$(OBJECTEXTENSION)\
		newton-dimension-prescan.$(OBJECTEXTENSION)\
		newton-parser.$(OBJECTEXTENSION)\
		newton-typeSignatures.$(OBJECTEXTENSION)\
		newton-types.$(OBJECTEXTENSION)\
		newton-timeStamps.$(OBJECTEXTENSION)\
		newton-irPass-autoDiff.$(OBJECTEXTENSION)\
		newton-irPass-sensors.$(OBJECTEXTENSION)\
		newton-irPass-cBackend.$(OBJECTEXTENSION)\
		newton-irPass-RTLBackend.$(OBJECTEXTENSION)\
		newton-irPass-dotBackend.$(OBJECTEXTENSION)\
		newton-irPass-smtBackend.$(OBJECTEXTENSION)\
		newton-irPass-estimatorSynthesisBackend.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-dimension-check.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-livenessAnalysis.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-optimizeByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-rangeAnalysis.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-simplifyControlFlowByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-constantSubstitution.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-shrinkTypeByRange.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-quantization.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-emitAssume.$(OBJECTEXTENSION)\
		newton-irPass-invariantSignalAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-piGroupsSignalAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-ipsaBackend.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixAnnotation.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroups.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPrinter.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixKernelPrinter.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixConvertToList.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroupWeedOut.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixPiGroupSorted.$(OBJECTEXTENSION)\
		newton-irPass-dimensionalMatrixKernelRowCanonicalization.$(OBJECTEXTENSION)\
		newton-irPass-constantFolding.$(OBJECTEXTENSION)\
		newton-check-pass.$(OBJECTEXTENSION)\
		newton-symbolTable.$(OBJECTEXTENSION)\
		newton-ffi2code-autoGeneratedSets.$(OBJECTEXTENSION)\
		newton-eigenLibraryInterface.$(OBJECTEXTENSION)\
		newton-irPass-targetParamBackend.$(OBJECTEXTENSION)\
		newton-irPass-LLVMIR-memoryAlignment.$(OBJECTEXTENSION)\


HEADERS		=\
		$(LIBFLEXPATH)/flex.h\
		newton-data-structures.h\
		version.h\
		newton-lexer.h\
		newton-dimension-prescan.h\
		newton-parser.h\
		newton-types.h\
		newton-timeStamps.h\
		newton-irPass-autoDiff.h\
		newton-irPass-sensors.h\
		newton-irPass-cBackend.h\
		newton-irPass-RTLBackend.h\
		newton-irPass-dotBackend.h\
		newton-irPass-smtBackend.h\
		newton-irPass-estimatorSynthesisBackend.h\
		newton-irPass-LLVMIR-dimension-check.h\
		newton-irPass-LLVMIR-livenessAnalysis.h\
		newton-irPass-LLVMIR-optimizeByRange.h\
		newton-irPass-invariantSignalAnnotation.h\
		newton-irPass-piGroupsSignalAnnotation.h\
		newton-irPass-ipsaBackend.h\
		newton-irPass-dimensionalMatrixAnnotation.h\
		newton-irPass-dimensionalMatrixPiGroups.h\
		newton-irPass-dimensionalMatrixPrinter.h\
		newton-irPass-dimensionalMatrixKernelPrinter.h\
		newton-irPass-dimensionalMatrixConvertToList.h\
		newton-irPass-dimensionalMatrixPiGroupWeedOut.h\
		newton-irPass-dimensionalMatrixPiGroupSorted.h\
		newton-irPass-dimensionalMatrixKernelRowCanonicalization.h\
		newton-irPass-constantFolding.h\
		newton.h\
		newton-check-pass.h\
		newton-eigenLibraryInterface.h\
		newton-irPass-targetParamBackend.h\

all: installhooks common version.c lib$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N).a $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile target examples

common:
	cd ../common && make SYSNAME=Newton SYSNAMELOWER=newton

#
#			Install the pre-commit hooks. There doesn't seem to be any other way to force people to install the hook when comitting on Noisy.
#
installhooks:
	ln -fs ../../applications/newton/include/NewtonBaseSignals.nt .
	cp $(TREEROOT)/hooks/$(PRECOMMITHOOK) $(TREEROOT)/.git/hooks/pre-commit
	cp $(TREEROOT)/hooks/commitMessageHook.sh $(TREEROOT)/.git/hooks/commit-msg
	cp $(TREEROOT)/hooks/postcommitStatisticsHook.sh $(TREEROOT)/.git/hooks/post-commit
	chmod +x $(TREEROOT)/.git/hooks/pre-commit
	chmod +x $(TREEROOT)/.git/hooks/commit-msg
	chmod +x $(TREEROOT)/.git/hooks/post-commit


#
#			Libraries
#

lib$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N).a: $(LIBNEWTONOBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(AR) $(ARFLAGS) $@ $(LIBNEWTONOBJS)

#
#			Executables
#
target: $(OBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(LD) $(LINKDIRS) $(LDFLAGS) $(OBJS) $(LLVMLIBS) $(SYSTEMLIBS) -lflex-$(OSTYPE) -lm $(LINKDIRS) $(LDFLAGS) -o $(TARGET) -lstdc++


cgi:lib$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N).a $(CGIOBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(LD) $(LINKDIRS) $(LDFLAGS) $(CGIOBJS) $(LLVMLIBS) $(SYSTEMLIBS) -lflex-$(OSTYPE) $(LINKDIRS) $(LDFLAGS) -o $(CGI_TARGET) -lstdc++


#
#			Objects
#
%.$(OBJECTEXTENSION): %.c $(HEADERS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(CC) $(FLEXFLAGS) $(INCDIRS) $(CCFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CC) $(FLEXFLAGS) $(INCDIRS) $(CCFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-eigenLibraryInterface.$(OBJECTEXTENSION): newton-eigenLibraryInterface.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-dimension-check.$(OBJECTEXTENSION): newton-irPass-LLVMIR-dimension-check.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-livenessAnalysis.$(OBJECTEXTENSION): newton-irPass-LLVMIR-livenessAnalysis.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-optimizeByRange.$(OBJECTEXTENSION): newton-irPass-LLVMIR-optimizeByRange.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-rangeAnalysis.$(OBJECTEXTENSION): newton-irPass-LLVMIR-rangeAnalysis.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-simplifyControlFlowByRange.$(OBJECTEXTENSION): newton-irPass-LLVMIR-simplifyControlFlowByRange.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-constantSubstitution.$(OBJECTEXTENSION): newton-irPass-LLVMIR-constantSubstitution.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-shrinkTypeByRange.$(OBJECTEXTENSION): newton-irPass-LLVMIR-shrinkTypeByRange.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-quantization.$(OBJECTEXTENSION): newton-irPass-LLVMIR-quantization.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-memoryAlignment.$(OBJECTEXTENSION): newton-irPass-LLVMIR-memoryAlignment.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

newton-irPass-LLVMIR-emitAssume.$(OBJECTEXTENSION): newton-irPass-LLVMIR-emitAssume.cpp
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CXX) $(FLEXFLAGS) $(INCDIRS) $(CXXFLAGS) $(WFLAGS) $(OPTFLAGS) $<

version.c: $(HEADERS) Makefile
	echo 'char kNewtonVersion[] = "0.3-alpha-'`git rev-list --count HEAD`' ('`git rev-parse HEAD`') (build '`date '+%m-%d-%Y-%H:%M'`-`whoami`@`hostname -s`-`uname -s`-`uname -r`-`uname -m`\)\"\; > version.c

#
#			Examples
#
examples: $(EXAMPLES) target
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/include/NewtonBaseSignals.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/include/AlSi10Mg.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/include/EosPEEK.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/include/Nylon11.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/include/Nylon12.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/include/Steel17-4.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/include/Titanium6-4.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/ActivityClassifier.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/AirplanePressure.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Beam.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Cyclotron.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/DroppedBall.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Electricity.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/GpsWalking.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/HotSphere.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Kepler.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/JetEngine.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/MotorWheelChair.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Pendulum.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/PendulumAcceleration.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Pressure.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Projectile.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/ReactorRod.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/SensorLife.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/SimplePendulum.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Simple.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/StepCounter.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/TirePressure.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/VehicleDistance.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Violin.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/CableHydrodynamicDragForce-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/ExplosionRadius-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/ExplosionWithoutRadius-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/HotSphere-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/IdealGas-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Pendulum-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/PipeWithDynamicViscosity-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/PipeWithKinematicViscosity-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Projectile-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Violin-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/ViolinWithTemperatureDependence-pigroups.nt
	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Waves-pigroups.nt
#	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/Beam-pigroups.nt
#	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/BeamAlternative-pigroups.nt
#	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/WeatherBalloon.nt
#	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/invariants/SelectiveLaserMelting.nt
#	./$(TARGET) $(EXAMPLES_NEWTON_FLAGS) $(EXAMPLESPATH)/temporary-examples/IpsaDualTemperatureMeasurementExample.nt


installcgi: cgi
	sudo cp $(CGI_TARGET) $(CGI_BIN)
	sudo mkdir -p $(HTMLBASEPATH)
	sudo cp ../icons/* $(HTMLBASEPATH)/ 
	sudo chmod 777 $(HTMLBASEPATH) 
	sudo chmod 755 $(HTMLBASEPATH)/*.png

test:
	./$(TARGET) --dot 0 $(EXAMPLESPATH)/invariants.nt | dot -Tpdf -O ; open noname.gv.pdf 


clean:
	rm -rf version.c $(OBJS) $(CGIOBJS) $(LIBNEWTONOBJS) $(CGI_TARGET) $(CGI_TARGET).dSYM $(TARGET) $(TARGET).dSYM $(CGI_TARGET) $(CGI_TARGET).dsym lib$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N).a *.o *.plist
	cd ../common && make clean
