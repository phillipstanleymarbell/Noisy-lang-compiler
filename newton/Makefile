LIBFLEXPATH=/Users/Hippo/compiler/libflex
CONFIGPATH=/Users/Hippo/compiler/libflex
TREEROOT=..
NOISYPATH=../noisy
COMMONPATH=../common
INCLUDEPATH=../include
MACHTYPE=x86_64
COMPILERVARIANT=clang
OSTYPE=darwin
include		$(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT)
include		$(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT)

PLATFORM_CFLAGS	= -Wno-gnu-designator
OBJECTEXTENSION = o
MAKEFLAGS	+= -j

CCFLAGS		= $(PLATFORM_DBGFLAGS) $(PLATFORM_CFLAGS) $(PLATFORM_DFLAGS) $(PLATFORM_OPTFLAGS)
LDFLAGS 	= $(PLATFORM_DBGFLAGS) -lm $(PLATFORM_LFLAGS) `pkg-config --libs 'libprotobuf-c >= 1.0.0'`

LIBNEWTON = Newton
LIBNOISY	= Noisy
LIBCOMMON = Common

NEWTON_L10N	= EN
NOISY_L10N	= EN
COMMON_L10N	= EN

TARGET		= newton-$(OSTYPE)-$(NEWTON_L10N)

#	-std=gnu99 because we use anonymous unions and induction variable defintions in loop head.
CCFLAGS		+= -c -std=gnu99 -DkNewtonL10N="\"$(NEWTON_L10N)\"" -DNEWTON_L10N_EN

WFLAGS		= -Wall -Werror
INCDIRS		= -I. -I$(LIBFLEXPATH) -I$(COMMONPATH) -I$(NOISYPATH) -I$(INCLUDEPATH)
LINKDIRS    = -L. -L$(LIBFLEXPATH) -L$(COMMONPATH) -lCommon-darwin-EN
PROTOC		= protoc-c

NEWTONEXTENSION	= nt

SOURCES		=\
		newton-tokens.c\
		newton-lexer.c                  \
		newton-api.c\
		newton-parser.c                 \
		newton-parser-expression.c                 \
		newton-dimension-pass.c          \
		newton-dimension-check-pass.c          \
		newton-irPass-dotBackend.c          \
		newton-typeSignatures.c\
		newton-check-pass.c  \
		newton-symbolTable.c\
		newton-ffi2code-autoGeneratedSets.c\
		newton.c\
		newton-types.c\
		main.c\


#
#	Clang seems to be unable to do LTO unless we have all the objects
#	not tucked into a library, so we don't just simply link main against
#	-l$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N)
#
OBJS		=\
		main.$(OBJECTEXTENSION)\
		newton.$(OBJECTEXTENSION)\
		version.$(OBJECTEXTENSION)\
		newton-tokens.$(OBJECTEXTENSION)\
		newton-api.$(OBJECTEXTENSION)\
		newton-lexer.$(OBJECTEXTENSION)                  \
		newton-parser.$(OBJECTEXTENSION)                 \
		newton-parser-expression.$(OBJECTEXTENSION)                 \
		newton-dimension-pass.$(OBJECTEXTENSION)          \
		newton-dimension-check-pass.$(OBJECTEXTENSION)          \
		newton-types.$(OBJECTEXTENSION)\
		newton-typeSignatures.$(OBJECTEXTENSION)\
		newton-irPass-dotBackend.$(OBJECTEXTENSION)          \
		newton-check-pass.$(OBJECTEXTENSION)  \
		newton-symbolTable.$(OBJECTEXTENSION)\
		newton-ffi2code-autoGeneratedSets.$(OBJECTEXTENSION)\




LIBNEWTONOBJS =\
		version.$(OBJECTEXTENSION)\
		newton.$(OBJECTEXTENSION)\
		newton-tokens.$(OBJECTEXTENSION)\
		newton-api.$(OBJECTEXTENSION)\
		newton-lexer.$(OBJECTEXTENSION)                  \
		newton-parser.$(OBJECTEXTENSION)                 \
		newton-parser-expression.$(OBJECTEXTENSION)                 \
		newton-dimension-pass.$(OBJECTEXTENSION)          \
		newton-dimension-check-pass.$(OBJECTEXTENSION)          \
		newton-typeSignatures.$(OBJECTEXTENSION)\
		newton-types.$(OBJECTEXTENSION)\
		newton-irPass-dotBackend.$(OBJECTEXTENSION)          \
		newton-check-pass.$(OBJECTEXTENSION)  \
		newton-symbolTable.$(OBJECTEXTENSION)\
		newton-ffi2code-autoGeneratedSets.$(OBJECTEXTENSION)\


HEADERS		=\
		$(LIBFLEXPATH)/flex.h           \
		newton-data-structures.h        \
		version.h                       \
		newton-lexer.h                  \
		newton-parser.h                 \
		newton-types.h                  \
		newton-parser-expression.h      \
		newton-irPass-dotBackend.h          \
		newton.h                        \
		newton-check-pass.h             \
		newton-dimension-pass.h         \
		newton-dimension-check-pass.h         \
		$(INCLUDEPATH)/newton-api.h     \



all: installhooks version.c lib$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N).a target $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 

installhooks:
	cp $(TREEROOT)/precommitStatisticsHook.sh $(TREEROOT)/.git/hooks/pre-commit
	cp $(TREEROOT)/postcommitStatisticsHook.sh $(TREEROOT)/.git/hooks/post-commit
	chmod +x $(TREEROOT)/.git/hooks/pre-commit
	chmod +x $(TREEROOT)/.git/hooks/post-commit


#
#			Libraries
#

lib$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N).a: $(LIBNEWTONOBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(AR) $(ARFLAGS) $@ $(LIBNEWTONOBJS)

#
#			Executables
#
target: $(OBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(LD) $(LINKDIRS) $(LDFLAGS) $(OBJS) -lflex-$(OSTYPE) -lm -o $(TARGET)


#
#			Objects
#
%.$(OBJECTEXTENSION): %.c $(HEADERS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(CC) $(FLEXFLAGS) $(INCDIRS) $(CCFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CC) $(FLEXFLAGS) $(INCDIRS) $(CCFLAGS) $(WFLAGS) $(OPTFLAGS) $<

version.c: $(HEADERS) Makefile
	echo 'char kNewtonVersion[] = "0.1-alpha-'`git rev-list --count HEAD`' ('`git rev-parse HEAD`') (build '`date '+%m-%d-%Y-%H:%M'`-`whoami`@`hostname -s`-`uname -s`-`uname -r`-`uname -m`\)\"\; > version.c

test:
	./newton-darwin-EN --dot Examples/invariants.n | dot -Tpdf -O ; open noname.gv.pdf 


clean:
	rm -rf version.c $(OBJS) $(CGIOBJS) $(LIBNEWTONOBJS) $(TARGET) $(TARGET).dSYM $(CGI_TARGET) $(CGI_TARGET).dsym lib$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N).a *.o *.plist 
