//
// Created by pei on 02/11/23.
//

#ifndef NOISY_LANG_COMPILER_ARM_SQRT_Q15_H
#define NOISY_LANG_COMPILER_ARM_SQRT_Q15_H

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

/**
 * @brief Error status returned by some functions in the library.
 */

typedef enum
{
    ARM_MATH_SUCCESS = 0,                /**< No error */
    ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
    ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
    ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation. */
    ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
    ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is singular and cannot be inverted. */
    ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
} arm_status;

/**
 * @brief 16-bit fractional data type in 1.15 format.
 */
typedef int16_t q15_t;
typedef int16_t bmx055yMagneto;

/**
 * @brief 32-bit fractional data type in 1.31 format.
 */
typedef int32_t q31_t;

/**
 * @brief 32-bit floating-point type definition.
 */
typedef float float32_t;

/**
 * @brief 64-bit floating-point type definition.
 */
typedef double float64_t;

q15_t arm_sqrt_q15(bmx055yMagneto in);

#endif //NOISY_LANG_COMPILER_ARM_SQRT_Q15_H
